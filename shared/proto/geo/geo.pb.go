// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.12
// source: shared/proto/geo/geo.proto

package geo

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Location represents a geographical coordinate
type Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Latitude  float64                `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude float64                `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Accuracy  float64                `protobuf:"fixed64,3,opt,name=accuracy,proto3" json:"accuracy,omitempty"` // accuracy in meters
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Address   string                 `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *Location) Reset() {
	*x = Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_proto_geo_geo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_geo_geo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_shared_proto_geo_geo_proto_rawDescGZIP(), []int{0}
}

func (x *Location) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Location) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *Location) GetAccuracy() float64 {
	if x != nil {
		return x.Accuracy
	}
	return 0
}

func (x *Location) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Location) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// Distance calculation request
type DistanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Origin            *Location `protobuf:"bytes,1,opt,name=origin,proto3" json:"origin,omitempty"`
	Destination       *Location `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination,omitempty"`
	CalculationMethod string    `protobuf:"bytes,3,opt,name=calculation_method,json=calculationMethod,proto3" json:"calculation_method,omitempty"` // "haversine", "manhattan", "euclidean"
}

func (x *DistanceRequest) Reset() {
	*x = DistanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_proto_geo_geo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DistanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistanceRequest) ProtoMessage() {}

func (x *DistanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_geo_geo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistanceRequest.ProtoReflect.Descriptor instead.
func (*DistanceRequest) Descriptor() ([]byte, []int) {
	return file_shared_proto_geo_geo_proto_rawDescGZIP(), []int{1}
}

func (x *DistanceRequest) GetOrigin() *Location {
	if x != nil {
		return x.Origin
	}
	return nil
}

func (x *DistanceRequest) GetDestination() *Location {
	if x != nil {
		return x.Destination
	}
	return nil
}

func (x *DistanceRequest) GetCalculationMethod() string {
	if x != nil {
		return x.CalculationMethod
	}
	return ""
}

// Distance calculation response
type DistanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DistanceMeters    float64 `protobuf:"fixed64,1,opt,name=distance_meters,json=distanceMeters,proto3" json:"distance_meters,omitempty"`
	DistanceKm        float64 `protobuf:"fixed64,2,opt,name=distance_km,json=distanceKm,proto3" json:"distance_km,omitempty"`
	BearingDegrees    float64 `protobuf:"fixed64,3,opt,name=bearing_degrees,json=bearingDegrees,proto3" json:"bearing_degrees,omitempty"`
	CalculationMethod string  `protobuf:"bytes,4,opt,name=calculation_method,json=calculationMethod,proto3" json:"calculation_method,omitempty"`
}

func (x *DistanceResponse) Reset() {
	*x = DistanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_proto_geo_geo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DistanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistanceResponse) ProtoMessage() {}

func (x *DistanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_geo_geo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistanceResponse.ProtoReflect.Descriptor instead.
func (*DistanceResponse) Descriptor() ([]byte, []int) {
	return file_shared_proto_geo_geo_proto_rawDescGZIP(), []int{2}
}

func (x *DistanceResponse) GetDistanceMeters() float64 {
	if x != nil {
		return x.DistanceMeters
	}
	return 0
}

func (x *DistanceResponse) GetDistanceKm() float64 {
	if x != nil {
		return x.DistanceKm
	}
	return 0
}

func (x *DistanceResponse) GetBearingDegrees() float64 {
	if x != nil {
		return x.BearingDegrees
	}
	return 0
}

func (x *DistanceResponse) GetCalculationMethod() string {
	if x != nil {
		return x.CalculationMethod
	}
	return ""
}

// ETA calculation request
type ETARequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Origin         *Location              `protobuf:"bytes,1,opt,name=origin,proto3" json:"origin,omitempty"`
	Destination    *Location              `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination,omitempty"`
	VehicleType    string                 `protobuf:"bytes,3,opt,name=vehicle_type,json=vehicleType,proto3" json:"vehicle_type,omitempty"` // "car", "bike", "walking"
	DepartureTime  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=departure_time,json=departureTime,proto3" json:"departure_time,omitempty"`
	IncludeTraffic bool                   `protobuf:"varint,5,opt,name=include_traffic,json=includeTraffic,proto3" json:"include_traffic,omitempty"`
}

func (x *ETARequest) Reset() {
	*x = ETARequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_proto_geo_geo_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ETARequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ETARequest) ProtoMessage() {}

func (x *ETARequest) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_geo_geo_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ETARequest.ProtoReflect.Descriptor instead.
func (*ETARequest) Descriptor() ([]byte, []int) {
	return file_shared_proto_geo_geo_proto_rawDescGZIP(), []int{3}
}

func (x *ETARequest) GetOrigin() *Location {
	if x != nil {
		return x.Origin
	}
	return nil
}

func (x *ETARequest) GetDestination() *Location {
	if x != nil {
		return x.Destination
	}
	return nil
}

func (x *ETARequest) GetVehicleType() string {
	if x != nil {
		return x.VehicleType
	}
	return ""
}

func (x *ETARequest) GetDepartureTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DepartureTime
	}
	return nil
}

func (x *ETARequest) GetIncludeTraffic() bool {
	if x != nil {
		return x.IncludeTraffic
	}
	return false
}

// ETA calculation response
type ETAResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DurationSeconds  int32                  `protobuf:"varint,1,opt,name=duration_seconds,json=durationSeconds,proto3" json:"duration_seconds,omitempty"`
	DistanceMeters   float64                `protobuf:"fixed64,2,opt,name=distance_meters,json=distanceMeters,proto3" json:"distance_meters,omitempty"`
	RouteSummary     string                 `protobuf:"bytes,3,opt,name=route_summary,json=routeSummary,proto3" json:"route_summary,omitempty"`
	Waypoints        []*Location            `protobuf:"bytes,4,rep,name=waypoints,proto3" json:"waypoints,omitempty"`
	EstimatedArrival *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=estimated_arrival,json=estimatedArrival,proto3" json:"estimated_arrival,omitempty"`
}

func (x *ETAResponse) Reset() {
	*x = ETAResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_proto_geo_geo_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ETAResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ETAResponse) ProtoMessage() {}

func (x *ETAResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_geo_geo_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ETAResponse.ProtoReflect.Descriptor instead.
func (*ETAResponse) Descriptor() ([]byte, []int) {
	return file_shared_proto_geo_geo_proto_rawDescGZIP(), []int{4}
}

func (x *ETAResponse) GetDurationSeconds() int32 {
	if x != nil {
		return x.DurationSeconds
	}
	return 0
}

func (x *ETAResponse) GetDistanceMeters() float64 {
	if x != nil {
		return x.DistanceMeters
	}
	return 0
}

func (x *ETAResponse) GetRouteSummary() string {
	if x != nil {
		return x.RouteSummary
	}
	return ""
}

func (x *ETAResponse) GetWaypoints() []*Location {
	if x != nil {
		return x.Waypoints
	}
	return nil
}

func (x *ETAResponse) GetEstimatedArrival() *timestamppb.Timestamp {
	if x != nil {
		return x.EstimatedArrival
	}
	return nil
}

// Nearby drivers request
type NearbyDriversRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Center        *Location `protobuf:"bytes,1,opt,name=center,proto3" json:"center,omitempty"`
	RadiusKm      float64   `protobuf:"fixed64,2,opt,name=radius_km,json=radiusKm,proto3" json:"radius_km,omitempty"`
	Limit         int32     `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	VehicleTypes  []string  `protobuf:"bytes,4,rep,name=vehicle_types,json=vehicleTypes,proto3" json:"vehicle_types,omitempty"`
	OnlyAvailable bool      `protobuf:"varint,5,opt,name=only_available,json=onlyAvailable,proto3" json:"only_available,omitempty"`
}

func (x *NearbyDriversRequest) Reset() {
	*x = NearbyDriversRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_proto_geo_geo_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NearbyDriversRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NearbyDriversRequest) ProtoMessage() {}

func (x *NearbyDriversRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_geo_geo_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NearbyDriversRequest.ProtoReflect.Descriptor instead.
func (*NearbyDriversRequest) Descriptor() ([]byte, []int) {
	return file_shared_proto_geo_geo_proto_rawDescGZIP(), []int{5}
}

func (x *NearbyDriversRequest) GetCenter() *Location {
	if x != nil {
		return x.Center
	}
	return nil
}

func (x *NearbyDriversRequest) GetRadiusKm() float64 {
	if x != nil {
		return x.RadiusKm
	}
	return 0
}

func (x *NearbyDriversRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *NearbyDriversRequest) GetVehicleTypes() []string {
	if x != nil {
		return x.VehicleTypes
	}
	return nil
}

func (x *NearbyDriversRequest) GetOnlyAvailable() bool {
	if x != nil {
		return x.OnlyAvailable
	}
	return false
}

// Driver location information
type DriverLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DriverId           string    `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	VehicleId          string    `protobuf:"bytes,2,opt,name=vehicle_id,json=vehicleId,proto3" json:"vehicle_id,omitempty"`
	Location           *Location `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	DistanceFromCenter float64   `protobuf:"fixed64,4,opt,name=distance_from_center,json=distanceFromCenter,proto3" json:"distance_from_center,omitempty"`
	Status             string    `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"` // "online", "busy", "offline"
	VehicleType        string    `protobuf:"bytes,6,opt,name=vehicle_type,json=vehicleType,proto3" json:"vehicle_type,omitempty"`
	Rating             float64   `protobuf:"fixed64,7,opt,name=rating,proto3" json:"rating,omitempty"`
}

func (x *DriverLocation) Reset() {
	*x = DriverLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_proto_geo_geo_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DriverLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverLocation) ProtoMessage() {}

func (x *DriverLocation) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_geo_geo_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverLocation.ProtoReflect.Descriptor instead.
func (*DriverLocation) Descriptor() ([]byte, []int) {
	return file_shared_proto_geo_geo_proto_rawDescGZIP(), []int{6}
}

func (x *DriverLocation) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *DriverLocation) GetVehicleId() string {
	if x != nil {
		return x.VehicleId
	}
	return ""
}

func (x *DriverLocation) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *DriverLocation) GetDistanceFromCenter() float64 {
	if x != nil {
		return x.DistanceFromCenter
	}
	return 0
}

func (x *DriverLocation) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DriverLocation) GetVehicleType() string {
	if x != nil {
		return x.VehicleType
	}
	return ""
}

func (x *DriverLocation) GetRating() float64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

// Nearby drivers response
type NearbyDriversResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Drivers        []*DriverLocation `protobuf:"bytes,1,rep,name=drivers,proto3" json:"drivers,omitempty"`
	TotalCount     int32             `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	SearchRadiusKm float64           `protobuf:"fixed64,3,opt,name=search_radius_km,json=searchRadiusKm,proto3" json:"search_radius_km,omitempty"`
}

func (x *NearbyDriversResponse) Reset() {
	*x = NearbyDriversResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_proto_geo_geo_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NearbyDriversResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NearbyDriversResponse) ProtoMessage() {}

func (x *NearbyDriversResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_geo_geo_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NearbyDriversResponse.ProtoReflect.Descriptor instead.
func (*NearbyDriversResponse) Descriptor() ([]byte, []int) {
	return file_shared_proto_geo_geo_proto_rawDescGZIP(), []int{7}
}

func (x *NearbyDriversResponse) GetDrivers() []*DriverLocation {
	if x != nil {
		return x.Drivers
	}
	return nil
}

func (x *NearbyDriversResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *NearbyDriversResponse) GetSearchRadiusKm() float64 {
	if x != nil {
		return x.SearchRadiusKm
	}
	return 0
}

// Update driver location request
type UpdateDriverLocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DriverId  string    `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	Location  *Location `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	Status    string    `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	VehicleId string    `protobuf:"bytes,4,opt,name=vehicle_id,json=vehicleId,proto3" json:"vehicle_id,omitempty"`
}

func (x *UpdateDriverLocationRequest) Reset() {
	*x = UpdateDriverLocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_proto_geo_geo_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDriverLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDriverLocationRequest) ProtoMessage() {}

func (x *UpdateDriverLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_geo_geo_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDriverLocationRequest.ProtoReflect.Descriptor instead.
func (*UpdateDriverLocationRequest) Descriptor() ([]byte, []int) {
	return file_shared_proto_geo_geo_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateDriverLocationRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *UpdateDriverLocationRequest) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *UpdateDriverLocationRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UpdateDriverLocationRequest) GetVehicleId() string {
	if x != nil {
		return x.VehicleId
	}
	return ""
}

// Update driver location response
type UpdateDriverLocationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success   bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message   string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *UpdateDriverLocationResponse) Reset() {
	*x = UpdateDriverLocationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_proto_geo_geo_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDriverLocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDriverLocationResponse) ProtoMessage() {}

func (x *UpdateDriverLocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_geo_geo_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDriverLocationResponse.ProtoReflect.Descriptor instead.
func (*UpdateDriverLocationResponse) Descriptor() ([]byte, []int) {
	return file_shared_proto_geo_geo_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateDriverLocationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateDriverLocationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateDriverLocationResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// Geohash request
type GeohashRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location  *Location `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	Precision int32     `protobuf:"varint,2,opt,name=precision,proto3" json:"precision,omitempty"` // 1-12, higher = more precise
}

func (x *GeohashRequest) Reset() {
	*x = GeohashRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_proto_geo_geo_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeohashRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeohashRequest) ProtoMessage() {}

func (x *GeohashRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_geo_geo_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeohashRequest.ProtoReflect.Descriptor instead.
func (*GeohashRequest) Descriptor() ([]byte, []int) {
	return file_shared_proto_geo_geo_proto_rawDescGZIP(), []int{10}
}

func (x *GeohashRequest) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *GeohashRequest) GetPrecision() int32 {
	if x != nil {
		return x.Precision
	}
	return 0
}

// Geohash response
type GeohashResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Geohash      string    `protobuf:"bytes,1,opt,name=geohash,proto3" json:"geohash,omitempty"`
	Center       *Location `protobuf:"bytes,2,opt,name=center,proto3" json:"center,omitempty"`
	WidthMeters  float64   `protobuf:"fixed64,3,opt,name=width_meters,json=widthMeters,proto3" json:"width_meters,omitempty"`
	HeightMeters float64   `protobuf:"fixed64,4,opt,name=height_meters,json=heightMeters,proto3" json:"height_meters,omitempty"`
}

func (x *GeohashResponse) Reset() {
	*x = GeohashResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_proto_geo_geo_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeohashResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeohashResponse) ProtoMessage() {}

func (x *GeohashResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_geo_geo_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeohashResponse.ProtoReflect.Descriptor instead.
func (*GeohashResponse) Descriptor() ([]byte, []int) {
	return file_shared_proto_geo_geo_proto_rawDescGZIP(), []int{11}
}

func (x *GeohashResponse) GetGeohash() string {
	if x != nil {
		return x.Geohash
	}
	return ""
}

func (x *GeohashResponse) GetCenter() *Location {
	if x != nil {
		return x.Center
	}
	return nil
}

func (x *GeohashResponse) GetWidthMeters() float64 {
	if x != nil {
		return x.WidthMeters
	}
	return 0
}

func (x *GeohashResponse) GetHeightMeters() float64 {
	if x != nil {
		return x.HeightMeters
	}
	return 0
}

// Route optimization request
type RouteOptimizationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start            *Location   `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	Waypoints        []*Location `protobuf:"bytes,2,rep,name=waypoints,proto3" json:"waypoints,omitempty"`
	End              *Location   `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
	OptimizationType string      `protobuf:"bytes,4,opt,name=optimization_type,json=optimizationType,proto3" json:"optimization_type,omitempty"` // "shortest", "fastest", "fuel_efficient"
	VehicleType      string      `protobuf:"bytes,5,opt,name=vehicle_type,json=vehicleType,proto3" json:"vehicle_type,omitempty"`
}

func (x *RouteOptimizationRequest) Reset() {
	*x = RouteOptimizationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_proto_geo_geo_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RouteOptimizationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteOptimizationRequest) ProtoMessage() {}

func (x *RouteOptimizationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_geo_geo_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteOptimizationRequest.ProtoReflect.Descriptor instead.
func (*RouteOptimizationRequest) Descriptor() ([]byte, []int) {
	return file_shared_proto_geo_geo_proto_rawDescGZIP(), []int{12}
}

func (x *RouteOptimizationRequest) GetStart() *Location {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *RouteOptimizationRequest) GetWaypoints() []*Location {
	if x != nil {
		return x.Waypoints
	}
	return nil
}

func (x *RouteOptimizationRequest) GetEnd() *Location {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *RouteOptimizationRequest) GetOptimizationType() string {
	if x != nil {
		return x.OptimizationType
	}
	return ""
}

func (x *RouteOptimizationRequest) GetVehicleType() string {
	if x != nil {
		return x.VehicleType
	}
	return ""
}

// Route optimization response
type RouteOptimizationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OptimizedRoute          []*Location `protobuf:"bytes,1,rep,name=optimized_route,json=optimizedRoute,proto3" json:"optimized_route,omitempty"`
	TotalDistanceMeters     float64     `protobuf:"fixed64,2,opt,name=total_distance_meters,json=totalDistanceMeters,proto3" json:"total_distance_meters,omitempty"`
	TotalDurationSeconds    int32       `protobuf:"varint,3,opt,name=total_duration_seconds,json=totalDurationSeconds,proto3" json:"total_duration_seconds,omitempty"`
	FuelConsumptionEstimate float64     `protobuf:"fixed64,4,opt,name=fuel_consumption_estimate,json=fuelConsumptionEstimate,proto3" json:"fuel_consumption_estimate,omitempty"`
	OptimizationType        string      `protobuf:"bytes,5,opt,name=optimization_type,json=optimizationType,proto3" json:"optimization_type,omitempty"`
}

func (x *RouteOptimizationResponse) Reset() {
	*x = RouteOptimizationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_proto_geo_geo_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RouteOptimizationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteOptimizationResponse) ProtoMessage() {}

func (x *RouteOptimizationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_geo_geo_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteOptimizationResponse.ProtoReflect.Descriptor instead.
func (*RouteOptimizationResponse) Descriptor() ([]byte, []int) {
	return file_shared_proto_geo_geo_proto_rawDescGZIP(), []int{13}
}

func (x *RouteOptimizationResponse) GetOptimizedRoute() []*Location {
	if x != nil {
		return x.OptimizedRoute
	}
	return nil
}

func (x *RouteOptimizationResponse) GetTotalDistanceMeters() float64 {
	if x != nil {
		return x.TotalDistanceMeters
	}
	return 0
}

func (x *RouteOptimizationResponse) GetTotalDurationSeconds() int32 {
	if x != nil {
		return x.TotalDurationSeconds
	}
	return 0
}

func (x *RouteOptimizationResponse) GetFuelConsumptionEstimate() float64 {
	if x != nil {
		return x.FuelConsumptionEstimate
	}
	return 0
}

func (x *RouteOptimizationResponse) GetOptimizationType() string {
	if x != nil {
		return x.OptimizationType
	}
	return ""
}

var File_shared_proto_geo_geo_proto protoreflect.FileDescriptor

var file_shared_proto_geo_geo_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67,
	0x65, 0x6f, 0x2f, 0x67, 0x65, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x67, 0x65,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xb4, 0x01, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c,
	0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09,
	0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x63,
	0x75, 0x72, 0x61, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x61, 0x63, 0x63,
	0x75, 0x72, 0x61, 0x63, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x98, 0x01, 0x0a, 0x0f, 0x44, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a,
	0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x67, 0x65, 0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x12, 0x2f, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x67, 0x65, 0x6f, 0x2e,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x22, 0xb4, 0x01, 0x0a, 0x10, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6b,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x4b, 0x6d, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x65, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x64,
	0x65, 0x67, 0x72, 0x65, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x62, 0x65,
	0x61, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x12,
	0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0xf3, 0x01, 0x0a, 0x0a,
	0x45, 0x54, 0x41, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x06, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x67, 0x65, 0x6f,
	0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x12, 0x2f, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x67, 0x65, 0x6f, 0x2e, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x41, 0x0a, 0x0e, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75,
	0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x64, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x75, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69,
	0x63, 0x22, 0xfc, 0x01, 0x0a, 0x0b, 0x45, 0x54, 0x41, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x27, 0x0a, 0x0f,
	0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x73,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x2b, 0x0a, 0x09, 0x77, 0x61,
	0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x67, 0x65, 0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x77, 0x61,
	0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x47, 0x0a, 0x11, 0x65, 0x73, 0x74, 0x69, 0x6d,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x10,
	0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x41, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c,
	0x22, 0xbc, 0x01, 0x0a, 0x14, 0x4e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x06, 0x63, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x67, 0x65, 0x6f, 0x2e,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x12, 0x1b, 0x0a, 0x09, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x5f, 0x6b, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x4b, 0x6d, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x6e, 0x6c, 0x79,
	0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x6f, 0x6e, 0x6c, 0x79, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x22,
	0xfc, 0x01, 0x0a, 0x0e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x29,
	0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x67, 0x65, 0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x91,
	0x01, 0x0a, 0x15, 0x4e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x65, 0x6f, 0x2e,
	0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x5f, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x5f, 0x6b, 0x6d, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73,
	0x4b, 0x6d, 0x22, 0x9c, 0x01, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x29, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x67, 0x65, 0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x49,
	0x64, 0x22, 0x8d, 0x01, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x59, 0x0a, 0x0e, 0x47, 0x65, 0x6f, 0x68, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x67, 0x65, 0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x9a, 0x01, 0x0a,
	0x0f, 0x47, 0x65, 0x6f, 0x68, 0x61, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x67, 0x65, 0x6f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x67, 0x65, 0x6f, 0x68, 0x61, 0x73, 0x68, 0x12, 0x25, 0x0a, 0x06, 0x63, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x67, 0x65, 0x6f,
	0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x63, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x69, 0x64, 0x74, 0x68, 0x5f, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x77, 0x69, 0x64, 0x74, 0x68, 0x4d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x22, 0xdd, 0x01, 0x0a, 0x18, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x67, 0x65, 0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2b, 0x0a, 0x09, 0x77,
	0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x67, 0x65, 0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x77,
	0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x67, 0x65, 0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x6f, 0x70, 0x74,
	0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xa6, 0x02, 0x0a, 0x19, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0f, 0x6f, 0x70, 0x74, 0x69, 0x6d,
	0x69, 0x7a, 0x65, 0x64, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x67, 0x65, 0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12,
	0x32, 0x0a, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x5f, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x13,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x3a, 0x0a, 0x19, 0x66, 0x75, 0x65,
	0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x73,
	0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x17, 0x66, 0x75,
	0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x73, 0x74,
	0x69, 0x6d, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x32, 0xbf, 0x03, 0x0a, 0x11, 0x47, 0x65, 0x6f, 0x73, 0x70, 0x61, 0x74, 0x69, 0x61,
	0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x40, 0x0a, 0x11, 0x43, 0x61, 0x6c, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x2e,
	0x67, 0x65, 0x6f, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x67, 0x65, 0x6f, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x0c, 0x43, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x45, 0x54, 0x41, 0x12, 0x0f, 0x2e, 0x67, 0x65, 0x6f,
	0x2e, 0x45, 0x54, 0x41, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x67, 0x65,
	0x6f, 0x2e, 0x45, 0x54, 0x41, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a,
	0x11, 0x46, 0x69, 0x6e, 0x64, 0x4e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x73, 0x12, 0x19, 0x2e, 0x67, 0x65, 0x6f, 0x2e, 0x4e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x44,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x67, 0x65, 0x6f, 0x2e, 0x4e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x14, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x20, 0x2e, 0x67, 0x65, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x67, 0x65, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0f, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x47, 0x65, 0x6f, 0x68, 0x61, 0x73, 0x68, 0x12, 0x13, 0x2e, 0x67, 0x65, 0x6f, 0x2e,
	0x47, 0x65, 0x6f, 0x68, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14,
	0x2e, 0x67, 0x65, 0x6f, 0x2e, 0x47, 0x65, 0x6f, 0x68, 0x61, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0d, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x67, 0x65, 0x6f, 0x2e, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x67, 0x65, 0x6f, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x72, 0x69, 0x64, 0x65, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2d, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_shared_proto_geo_geo_proto_rawDescOnce sync.Once
	file_shared_proto_geo_geo_proto_rawDescData = file_shared_proto_geo_geo_proto_rawDesc
)

func file_shared_proto_geo_geo_proto_rawDescGZIP() []byte {
	file_shared_proto_geo_geo_proto_rawDescOnce.Do(func() {
		file_shared_proto_geo_geo_proto_rawDescData = protoimpl.X.CompressGZIP(file_shared_proto_geo_geo_proto_rawDescData)
	})
	return file_shared_proto_geo_geo_proto_rawDescData
}

var file_shared_proto_geo_geo_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_shared_proto_geo_geo_proto_goTypes = []interface{}{
	(*Location)(nil),                     // 0: geo.Location
	(*DistanceRequest)(nil),              // 1: geo.DistanceRequest
	(*DistanceResponse)(nil),             // 2: geo.DistanceResponse
	(*ETARequest)(nil),                   // 3: geo.ETARequest
	(*ETAResponse)(nil),                  // 4: geo.ETAResponse
	(*NearbyDriversRequest)(nil),         // 5: geo.NearbyDriversRequest
	(*DriverLocation)(nil),               // 6: geo.DriverLocation
	(*NearbyDriversResponse)(nil),        // 7: geo.NearbyDriversResponse
	(*UpdateDriverLocationRequest)(nil),  // 8: geo.UpdateDriverLocationRequest
	(*UpdateDriverLocationResponse)(nil), // 9: geo.UpdateDriverLocationResponse
	(*GeohashRequest)(nil),               // 10: geo.GeohashRequest
	(*GeohashResponse)(nil),              // 11: geo.GeohashResponse
	(*RouteOptimizationRequest)(nil),     // 12: geo.RouteOptimizationRequest
	(*RouteOptimizationResponse)(nil),    // 13: geo.RouteOptimizationResponse
	(*timestamppb.Timestamp)(nil),        // 14: google.protobuf.Timestamp
}
var file_shared_proto_geo_geo_proto_depIdxs = []int32{
	14, // 0: geo.Location.timestamp:type_name -> google.protobuf.Timestamp
	0,  // 1: geo.DistanceRequest.origin:type_name -> geo.Location
	0,  // 2: geo.DistanceRequest.destination:type_name -> geo.Location
	0,  // 3: geo.ETARequest.origin:type_name -> geo.Location
	0,  // 4: geo.ETARequest.destination:type_name -> geo.Location
	14, // 5: geo.ETARequest.departure_time:type_name -> google.protobuf.Timestamp
	0,  // 6: geo.ETAResponse.waypoints:type_name -> geo.Location
	14, // 7: geo.ETAResponse.estimated_arrival:type_name -> google.protobuf.Timestamp
	0,  // 8: geo.NearbyDriversRequest.center:type_name -> geo.Location
	0,  // 9: geo.DriverLocation.location:type_name -> geo.Location
	6,  // 10: geo.NearbyDriversResponse.drivers:type_name -> geo.DriverLocation
	0,  // 11: geo.UpdateDriverLocationRequest.location:type_name -> geo.Location
	14, // 12: geo.UpdateDriverLocationResponse.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 13: geo.GeohashRequest.location:type_name -> geo.Location
	0,  // 14: geo.GeohashResponse.center:type_name -> geo.Location
	0,  // 15: geo.RouteOptimizationRequest.start:type_name -> geo.Location
	0,  // 16: geo.RouteOptimizationRequest.waypoints:type_name -> geo.Location
	0,  // 17: geo.RouteOptimizationRequest.end:type_name -> geo.Location
	0,  // 18: geo.RouteOptimizationResponse.optimized_route:type_name -> geo.Location
	1,  // 19: geo.GeospatialService.CalculateDistance:input_type -> geo.DistanceRequest
	3,  // 20: geo.GeospatialService.CalculateETA:input_type -> geo.ETARequest
	5,  // 21: geo.GeospatialService.FindNearbyDrivers:input_type -> geo.NearbyDriversRequest
	8,  // 22: geo.GeospatialService.UpdateDriverLocation:input_type -> geo.UpdateDriverLocationRequest
	10, // 23: geo.GeospatialService.GenerateGeohash:input_type -> geo.GeohashRequest
	12, // 24: geo.GeospatialService.OptimizeRoute:input_type -> geo.RouteOptimizationRequest
	2,  // 25: geo.GeospatialService.CalculateDistance:output_type -> geo.DistanceResponse
	4,  // 26: geo.GeospatialService.CalculateETA:output_type -> geo.ETAResponse
	7,  // 27: geo.GeospatialService.FindNearbyDrivers:output_type -> geo.NearbyDriversResponse
	9,  // 28: geo.GeospatialService.UpdateDriverLocation:output_type -> geo.UpdateDriverLocationResponse
	11, // 29: geo.GeospatialService.GenerateGeohash:output_type -> geo.GeohashResponse
	13, // 30: geo.GeospatialService.OptimizeRoute:output_type -> geo.RouteOptimizationResponse
	25, // [25:31] is the sub-list for method output_type
	19, // [19:25] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_shared_proto_geo_geo_proto_init() }
func file_shared_proto_geo_geo_proto_init() {
	if File_shared_proto_geo_geo_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_shared_proto_geo_geo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_proto_geo_geo_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DistanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_proto_geo_geo_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DistanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_proto_geo_geo_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ETARequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_proto_geo_geo_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ETAResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_proto_geo_geo_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NearbyDriversRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_proto_geo_geo_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DriverLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_proto_geo_geo_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NearbyDriversResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_proto_geo_geo_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDriverLocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_proto_geo_geo_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDriverLocationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_proto_geo_geo_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeohashRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_proto_geo_geo_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeohashResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_proto_geo_geo_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RouteOptimizationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_proto_geo_geo_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RouteOptimizationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_shared_proto_geo_geo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_shared_proto_geo_geo_proto_goTypes,
		DependencyIndexes: file_shared_proto_geo_geo_proto_depIdxs,
		MessageInfos:      file_shared_proto_geo_geo_proto_msgTypes,
	}.Build()
	File_shared_proto_geo_geo_proto = out.File
	file_shared_proto_geo_geo_proto_rawDesc = nil
	file_shared_proto_geo_geo_proto_goTypes = nil
	file_shared_proto_geo_geo_proto_depIdxs = nil
}
