// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.21.12
// source: trip.proto

package trip

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Trip status enumeration
type TripStatus int32

const (
	TripStatus_UNKNOWN_STATUS      TripStatus = 0
	TripStatus_REQUESTED           TripStatus = 1
	TripStatus_MATCHED             TripStatus = 2
	TripStatus_DRIVER_EN_ROUTE     TripStatus = 3
	TripStatus_DRIVER_ARRIVED      TripStatus = 4
	TripStatus_TRIP_STARTED        TripStatus = 5
	TripStatus_IN_PROGRESS         TripStatus = 6
	TripStatus_COMPLETED           TripStatus = 7
	TripStatus_CANCELLED_BY_RIDER  TripStatus = 8
	TripStatus_CANCELLED_BY_DRIVER TripStatus = 9
	TripStatus_FAILED              TripStatus = 10
)

// Enum value maps for TripStatus.
var (
	TripStatus_name = map[int32]string{
		0:  "UNKNOWN_STATUS",
		1:  "REQUESTED",
		2:  "MATCHED",
		3:  "DRIVER_EN_ROUTE",
		4:  "DRIVER_ARRIVED",
		5:  "TRIP_STARTED",
		6:  "IN_PROGRESS",
		7:  "COMPLETED",
		8:  "CANCELLED_BY_RIDER",
		9:  "CANCELLED_BY_DRIVER",
		10: "FAILED",
	}
	TripStatus_value = map[string]int32{
		"UNKNOWN_STATUS":      0,
		"REQUESTED":           1,
		"MATCHED":             2,
		"DRIVER_EN_ROUTE":     3,
		"DRIVER_ARRIVED":      4,
		"TRIP_STARTED":        5,
		"IN_PROGRESS":         6,
		"COMPLETED":           7,
		"CANCELLED_BY_RIDER":  8,
		"CANCELLED_BY_DRIVER": 9,
		"FAILED":              10,
	}
)

func (x TripStatus) Enum() *TripStatus {
	p := new(TripStatus)
	*p = x
	return p
}

func (x TripStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TripStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_trip_proto_enumTypes[0].Descriptor()
}

func (TripStatus) Type() protoreflect.EnumType {
	return &file_trip_proto_enumTypes[0]
}

func (x TripStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TripStatus.Descriptor instead.
func (TripStatus) EnumDescriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{0}
}

// Location represents a geographical coordinate (simplified version)
type Location struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Latitude      float64                `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float64                `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Address       string                 `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Location) Reset() {
	*x = Location{}
	mi := &file_trip_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{0}
}

func (x *Location) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Location) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *Location) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// Trip represents a ride request and its lifecycle
type Trip struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RiderId         string                 `protobuf:"bytes,2,opt,name=rider_id,json=riderId,proto3" json:"rider_id,omitempty"`
	DriverId        string                 `protobuf:"bytes,3,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	Status          TripStatus             `protobuf:"varint,4,opt,name=status,proto3,enum=trip.TripStatus" json:"status,omitempty"`
	PickupLocation  *Location              `protobuf:"bytes,5,opt,name=pickup_location,json=pickupLocation,proto3" json:"pickup_location,omitempty"`
	Destination     *Location              `protobuf:"bytes,6,opt,name=destination,proto3" json:"destination,omitempty"`
	EstimatedFare   float64                `protobuf:"fixed64,7,opt,name=estimated_fare,json=estimatedFare,proto3" json:"estimated_fare,omitempty"`
	ActualFare      float64                `protobuf:"fixed64,8,opt,name=actual_fare,json=actualFare,proto3" json:"actual_fare,omitempty"`
	PaymentMethodId string                 `protobuf:"bytes,9,opt,name=payment_method_id,json=paymentMethodId,proto3" json:"payment_method_id,omitempty"`
	RequestedAt     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=requested_at,json=requestedAt,proto3" json:"requested_at,omitempty"`
	AcceptedAt      *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=accepted_at,json=acceptedAt,proto3" json:"accepted_at,omitempty"`
	StartedAt       *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	CompletedAt     *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	Metadata        *TripMetadata          `protobuf:"bytes,14,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Trip) Reset() {
	*x = Trip{}
	mi := &file_trip_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Trip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trip) ProtoMessage() {}

func (x *Trip) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trip.ProtoReflect.Descriptor instead.
func (*Trip) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{1}
}

func (x *Trip) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Trip) GetRiderId() string {
	if x != nil {
		return x.RiderId
	}
	return ""
}

func (x *Trip) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *Trip) GetStatus() TripStatus {
	if x != nil {
		return x.Status
	}
	return TripStatus_UNKNOWN_STATUS
}

func (x *Trip) GetPickupLocation() *Location {
	if x != nil {
		return x.PickupLocation
	}
	return nil
}

func (x *Trip) GetDestination() *Location {
	if x != nil {
		return x.Destination
	}
	return nil
}

func (x *Trip) GetEstimatedFare() float64 {
	if x != nil {
		return x.EstimatedFare
	}
	return 0
}

func (x *Trip) GetActualFare() float64 {
	if x != nil {
		return x.ActualFare
	}
	return 0
}

func (x *Trip) GetPaymentMethodId() string {
	if x != nil {
		return x.PaymentMethodId
	}
	return ""
}

func (x *Trip) GetRequestedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.RequestedAt
	}
	return nil
}

func (x *Trip) GetAcceptedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.AcceptedAt
	}
	return nil
}

func (x *Trip) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *Trip) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

func (x *Trip) GetMetadata() *TripMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Additional trip metadata
type TripMetadata struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	VehicleType              string                 `protobuf:"bytes,1,opt,name=vehicle_type,json=vehicleType,proto3" json:"vehicle_type,omitempty"`
	DistanceKm               float64                `protobuf:"fixed64,2,opt,name=distance_km,json=distanceKm,proto3" json:"distance_km,omitempty"`
	EstimatedDurationMinutes int32                  `protobuf:"varint,3,opt,name=estimated_duration_minutes,json=estimatedDurationMinutes,proto3" json:"estimated_duration_minutes,omitempty"`
	ActualDurationMinutes    int32                  `protobuf:"varint,4,opt,name=actual_duration_minutes,json=actualDurationMinutes,proto3" json:"actual_duration_minutes,omitempty"`
	SurgeMultiplier          float64                `protobuf:"fixed64,5,opt,name=surge_multiplier,json=surgeMultiplier,proto3" json:"surge_multiplier,omitempty"`
	CancellationReason       string                 `protobuf:"bytes,6,opt,name=cancellation_reason,json=cancellationReason,proto3" json:"cancellation_reason,omitempty"`
	RiderRating              float64                `protobuf:"fixed64,7,opt,name=rider_rating,json=riderRating,proto3" json:"rider_rating,omitempty"`
	DriverRating             float64                `protobuf:"fixed64,8,opt,name=driver_rating,json=driverRating,proto3" json:"driver_rating,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *TripMetadata) Reset() {
	*x = TripMetadata{}
	mi := &file_trip_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TripMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TripMetadata) ProtoMessage() {}

func (x *TripMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TripMetadata.ProtoReflect.Descriptor instead.
func (*TripMetadata) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{2}
}

func (x *TripMetadata) GetVehicleType() string {
	if x != nil {
		return x.VehicleType
	}
	return ""
}

func (x *TripMetadata) GetDistanceKm() float64 {
	if x != nil {
		return x.DistanceKm
	}
	return 0
}

func (x *TripMetadata) GetEstimatedDurationMinutes() int32 {
	if x != nil {
		return x.EstimatedDurationMinutes
	}
	return 0
}

func (x *TripMetadata) GetActualDurationMinutes() int32 {
	if x != nil {
		return x.ActualDurationMinutes
	}
	return 0
}

func (x *TripMetadata) GetSurgeMultiplier() float64 {
	if x != nil {
		return x.SurgeMultiplier
	}
	return 0
}

func (x *TripMetadata) GetCancellationReason() string {
	if x != nil {
		return x.CancellationReason
	}
	return ""
}

func (x *TripMetadata) GetRiderRating() float64 {
	if x != nil {
		return x.RiderRating
	}
	return 0
}

func (x *TripMetadata) GetDriverRating() float64 {
	if x != nil {
		return x.DriverRating
	}
	return 0
}

// Request/Response messages
type CreateTripRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	RiderId         string                 `protobuf:"bytes,1,opt,name=rider_id,json=riderId,proto3" json:"rider_id,omitempty"`
	PickupLocation  *Location              `protobuf:"bytes,2,opt,name=pickup_location,json=pickupLocation,proto3" json:"pickup_location,omitempty"`
	Destination     *Location              `protobuf:"bytes,3,opt,name=destination,proto3" json:"destination,omitempty"`
	VehicleType     string                 `protobuf:"bytes,4,opt,name=vehicle_type,json=vehicleType,proto3" json:"vehicle_type,omitempty"`
	PaymentMethodId string                 `protobuf:"bytes,5,opt,name=payment_method_id,json=paymentMethodId,proto3" json:"payment_method_id,omitempty"`
	Metadata        *TripMetadata          `protobuf:"bytes,6,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreateTripRequest) Reset() {
	*x = CreateTripRequest{}
	mi := &file_trip_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTripRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTripRequest) ProtoMessage() {}

func (x *CreateTripRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTripRequest.ProtoReflect.Descriptor instead.
func (*CreateTripRequest) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{3}
}

func (x *CreateTripRequest) GetRiderId() string {
	if x != nil {
		return x.RiderId
	}
	return ""
}

func (x *CreateTripRequest) GetPickupLocation() *Location {
	if x != nil {
		return x.PickupLocation
	}
	return nil
}

func (x *CreateTripRequest) GetDestination() *Location {
	if x != nil {
		return x.Destination
	}
	return nil
}

func (x *CreateTripRequest) GetVehicleType() string {
	if x != nil {
		return x.VehicleType
	}
	return ""
}

func (x *CreateTripRequest) GetPaymentMethodId() string {
	if x != nil {
		return x.PaymentMethodId
	}
	return ""
}

func (x *CreateTripRequest) GetMetadata() *TripMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type CreateTripResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Trip          *Trip                  `protobuf:"bytes,1,opt,name=trip,proto3" json:"trip,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Errors        []string               `protobuf:"bytes,4,rep,name=errors,proto3" json:"errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTripResponse) Reset() {
	*x = CreateTripResponse{}
	mi := &file_trip_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTripResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTripResponse) ProtoMessage() {}

func (x *CreateTripResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTripResponse.ProtoReflect.Descriptor instead.
func (*CreateTripResponse) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{4}
}

func (x *CreateTripResponse) GetTrip() *Trip {
	if x != nil {
		return x.Trip
	}
	return nil
}

func (x *CreateTripResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateTripResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateTripResponse) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

type GetTripRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TripId        string                 `protobuf:"bytes,1,opt,name=trip_id,json=tripId,proto3" json:"trip_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTripRequest) Reset() {
	*x = GetTripRequest{}
	mi := &file_trip_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTripRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTripRequest) ProtoMessage() {}

func (x *GetTripRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTripRequest.ProtoReflect.Descriptor instead.
func (*GetTripRequest) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{5}
}

func (x *GetTripRequest) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

type GetTripResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Trip          *Trip                  `protobuf:"bytes,1,opt,name=trip,proto3" json:"trip,omitempty"`
	Found         bool                   `protobuf:"varint,2,opt,name=found,proto3" json:"found,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTripResponse) Reset() {
	*x = GetTripResponse{}
	mi := &file_trip_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTripResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTripResponse) ProtoMessage() {}

func (x *GetTripResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTripResponse.ProtoReflect.Descriptor instead.
func (*GetTripResponse) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{6}
}

func (x *GetTripResponse) GetTrip() *Trip {
	if x != nil {
		return x.Trip
	}
	return nil
}

func (x *GetTripResponse) GetFound() bool {
	if x != nil {
		return x.Found
	}
	return false
}

type UpdateTripStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TripId        string                 `protobuf:"bytes,1,opt,name=trip_id,json=tripId,proto3" json:"trip_id,omitempty"`
	Status        TripStatus             `protobuf:"varint,2,opt,name=status,proto3,enum=trip.TripStatus" json:"status,omitempty"`
	DriverId      string                 `protobuf:"bytes,3,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	Reason        string                 `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTripStatusRequest) Reset() {
	*x = UpdateTripStatusRequest{}
	mi := &file_trip_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTripStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTripStatusRequest) ProtoMessage() {}

func (x *UpdateTripStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTripStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateTripStatusRequest) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateTripStatusRequest) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

func (x *UpdateTripStatusRequest) GetStatus() TripStatus {
	if x != nil {
		return x.Status
	}
	return TripStatus_UNKNOWN_STATUS
}

func (x *UpdateTripStatusRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *UpdateTripStatusRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type UpdateTripStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Trip          *Trip                  `protobuf:"bytes,1,opt,name=trip,proto3" json:"trip,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTripStatusResponse) Reset() {
	*x = UpdateTripStatusResponse{}
	mi := &file_trip_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTripStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTripStatusResponse) ProtoMessage() {}

func (x *UpdateTripStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTripStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateTripStatusResponse) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateTripStatusResponse) GetTrip() *Trip {
	if x != nil {
		return x.Trip
	}
	return nil
}

func (x *UpdateTripStatusResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateTripStatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetUserTripsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Role          string                 `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"` // "rider" or "driver"
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	Status        TripStatus             `protobuf:"varint,5,opt,name=status,proto3,enum=trip.TripStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserTripsRequest) Reset() {
	*x = GetUserTripsRequest{}
	mi := &file_trip_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserTripsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserTripsRequest) ProtoMessage() {}

func (x *GetUserTripsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserTripsRequest.ProtoReflect.Descriptor instead.
func (*GetUserTripsRequest) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{9}
}

func (x *GetUserTripsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserTripsRequest) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *GetUserTripsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetUserTripsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetUserTripsRequest) GetStatus() TripStatus {
	if x != nil {
		return x.Status
	}
	return TripStatus_UNKNOWN_STATUS
}

type GetUserTripsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Trips         []*Trip                `protobuf:"bytes,1,rep,name=trips,proto3" json:"trips,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	HasMore       bool                   `protobuf:"varint,3,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserTripsResponse) Reset() {
	*x = GetUserTripsResponse{}
	mi := &file_trip_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserTripsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserTripsResponse) ProtoMessage() {}

func (x *GetUserTripsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserTripsResponse.ProtoReflect.Descriptor instead.
func (*GetUserTripsResponse) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{10}
}

func (x *GetUserTripsResponse) GetTrips() []*Trip {
	if x != nil {
		return x.Trips
	}
	return nil
}

func (x *GetUserTripsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *GetUserTripsResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

type GetActiveTripsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Region        string                 `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetActiveTripsRequest) Reset() {
	*x = GetActiveTripsRequest{}
	mi := &file_trip_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetActiveTripsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveTripsRequest) ProtoMessage() {}

func (x *GetActiveTripsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveTripsRequest.ProtoReflect.Descriptor instead.
func (*GetActiveTripsRequest) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{11}
}

func (x *GetActiveTripsRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *GetActiveTripsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetActiveTripsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Trips         []*Trip                `protobuf:"bytes,1,rep,name=trips,proto3" json:"trips,omitempty"`
	Count         int32                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetActiveTripsResponse) Reset() {
	*x = GetActiveTripsResponse{}
	mi := &file_trip_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetActiveTripsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveTripsResponse) ProtoMessage() {}

func (x *GetActiveTripsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveTripsResponse.ProtoReflect.Descriptor instead.
func (*GetActiveTripsResponse) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{12}
}

func (x *GetActiveTripsResponse) GetTrips() []*Trip {
	if x != nil {
		return x.Trips
	}
	return nil
}

func (x *GetActiveTripsResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

// Real-time trip updates
type TripUpdateEvent struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	TripId          string                 `protobuf:"bytes,1,opt,name=trip_id,json=tripId,proto3" json:"trip_id,omitempty"`
	OldStatus       TripStatus             `protobuf:"varint,2,opt,name=old_status,json=oldStatus,proto3,enum=trip.TripStatus" json:"old_status,omitempty"`
	NewStatus       TripStatus             `protobuf:"varint,3,opt,name=new_status,json=newStatus,proto3,enum=trip.TripStatus" json:"new_status,omitempty"`
	CurrentLocation *Location              `protobuf:"bytes,4,opt,name=current_location,json=currentLocation,proto3" json:"current_location,omitempty"`
	Timestamp       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Metadata        map[string]string      `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TripUpdateEvent) Reset() {
	*x = TripUpdateEvent{}
	mi := &file_trip_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TripUpdateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TripUpdateEvent) ProtoMessage() {}

func (x *TripUpdateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TripUpdateEvent.ProtoReflect.Descriptor instead.
func (*TripUpdateEvent) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{13}
}

func (x *TripUpdateEvent) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

func (x *TripUpdateEvent) GetOldStatus() TripStatus {
	if x != nil {
		return x.OldStatus
	}
	return TripStatus_UNKNOWN_STATUS
}

func (x *TripUpdateEvent) GetNewStatus() TripStatus {
	if x != nil {
		return x.NewStatus
	}
	return TripStatus_UNKNOWN_STATUS
}

func (x *TripUpdateEvent) GetCurrentLocation() *Location {
	if x != nil {
		return x.CurrentLocation
	}
	return nil
}

func (x *TripUpdateEvent) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *TripUpdateEvent) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type SubscribeToTripUpdatesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TripId        string                 `protobuf:"bytes,1,opt,name=trip_id,json=tripId,proto3" json:"trip_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeToTripUpdatesRequest) Reset() {
	*x = SubscribeToTripUpdatesRequest{}
	mi := &file_trip_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeToTripUpdatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToTripUpdatesRequest) ProtoMessage() {}

func (x *SubscribeToTripUpdatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToTripUpdatesRequest.ProtoReflect.Descriptor instead.
func (*SubscribeToTripUpdatesRequest) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{14}
}

func (x *SubscribeToTripUpdatesRequest) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

func (x *SubscribeToTripUpdatesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

var File_trip_proto protoreflect.FileDescriptor

const file_trip_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"trip.proto\x12\x04trip\x1a\x1fgoogle/protobuf/timestamp.proto\"^\n" +
	"\bLocation\x12\x1a\n" +
	"\blatitude\x18\x01 \x01(\x01R\blatitude\x12\x1c\n" +
	"\tlongitude\x18\x02 \x01(\x01R\tlongitude\x12\x18\n" +
	"\aaddress\x18\x03 \x01(\tR\aaddress\"\xfd\x04\n" +
	"\x04Trip\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\brider_id\x18\x02 \x01(\tR\ariderId\x12\x1b\n" +
	"\tdriver_id\x18\x03 \x01(\tR\bdriverId\x12(\n" +
	"\x06status\x18\x04 \x01(\x0e2\x10.trip.TripStatusR\x06status\x127\n" +
	"\x0fpickup_location\x18\x05 \x01(\v2\x0e.trip.LocationR\x0epickupLocation\x120\n" +
	"\vdestination\x18\x06 \x01(\v2\x0e.trip.LocationR\vdestination\x12%\n" +
	"\x0eestimated_fare\x18\a \x01(\x01R\restimatedFare\x12\x1f\n" +
	"\vactual_fare\x18\b \x01(\x01R\n" +
	"actualFare\x12*\n" +
	"\x11payment_method_id\x18\t \x01(\tR\x0fpaymentMethodId\x12=\n" +
	"\frequested_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\vrequestedAt\x12;\n" +
	"\vaccepted_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"acceptedAt\x129\n" +
	"\n" +
	"started_at\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\x12=\n" +
	"\fcompleted_at\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\vcompletedAt\x12.\n" +
	"\bmetadata\x18\x0e \x01(\v2\x12.trip.TripMetadataR\bmetadata\"\xec\x02\n" +
	"\fTripMetadata\x12!\n" +
	"\fvehicle_type\x18\x01 \x01(\tR\vvehicleType\x12\x1f\n" +
	"\vdistance_km\x18\x02 \x01(\x01R\n" +
	"distanceKm\x12<\n" +
	"\x1aestimated_duration_minutes\x18\x03 \x01(\x05R\x18estimatedDurationMinutes\x126\n" +
	"\x17actual_duration_minutes\x18\x04 \x01(\x05R\x15actualDurationMinutes\x12)\n" +
	"\x10surge_multiplier\x18\x05 \x01(\x01R\x0fsurgeMultiplier\x12/\n" +
	"\x13cancellation_reason\x18\x06 \x01(\tR\x12cancellationReason\x12!\n" +
	"\frider_rating\x18\a \x01(\x01R\vriderRating\x12#\n" +
	"\rdriver_rating\x18\b \x01(\x01R\fdriverRating\"\x98\x02\n" +
	"\x11CreateTripRequest\x12\x19\n" +
	"\brider_id\x18\x01 \x01(\tR\ariderId\x127\n" +
	"\x0fpickup_location\x18\x02 \x01(\v2\x0e.trip.LocationR\x0epickupLocation\x120\n" +
	"\vdestination\x18\x03 \x01(\v2\x0e.trip.LocationR\vdestination\x12!\n" +
	"\fvehicle_type\x18\x04 \x01(\tR\vvehicleType\x12*\n" +
	"\x11payment_method_id\x18\x05 \x01(\tR\x0fpaymentMethodId\x12.\n" +
	"\bmetadata\x18\x06 \x01(\v2\x12.trip.TripMetadataR\bmetadata\"\x80\x01\n" +
	"\x12CreateTripResponse\x12\x1e\n" +
	"\x04trip\x18\x01 \x01(\v2\n" +
	".trip.TripR\x04trip\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12\x16\n" +
	"\x06errors\x18\x04 \x03(\tR\x06errors\")\n" +
	"\x0eGetTripRequest\x12\x17\n" +
	"\atrip_id\x18\x01 \x01(\tR\x06tripId\"G\n" +
	"\x0fGetTripResponse\x12\x1e\n" +
	"\x04trip\x18\x01 \x01(\v2\n" +
	".trip.TripR\x04trip\x12\x14\n" +
	"\x05found\x18\x02 \x01(\bR\x05found\"\x91\x01\n" +
	"\x17UpdateTripStatusRequest\x12\x17\n" +
	"\atrip_id\x18\x01 \x01(\tR\x06tripId\x12(\n" +
	"\x06status\x18\x02 \x01(\x0e2\x10.trip.TripStatusR\x06status\x12\x1b\n" +
	"\tdriver_id\x18\x03 \x01(\tR\bdriverId\x12\x16\n" +
	"\x06reason\x18\x04 \x01(\tR\x06reason\"n\n" +
	"\x18UpdateTripStatusResponse\x12\x1e\n" +
	"\x04trip\x18\x01 \x01(\v2\n" +
	".trip.TripR\x04trip\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"\x9a\x01\n" +
	"\x13GetUserTripsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x12\n" +
	"\x04role\x18\x02 \x01(\tR\x04role\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x04 \x01(\x05R\x06offset\x12(\n" +
	"\x06status\x18\x05 \x01(\x0e2\x10.trip.TripStatusR\x06status\"t\n" +
	"\x14GetUserTripsResponse\x12 \n" +
	"\x05trips\x18\x01 \x03(\v2\n" +
	".trip.TripR\x05trips\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12\x19\n" +
	"\bhas_more\x18\x03 \x01(\bR\ahasMore\"E\n" +
	"\x15GetActiveTripsRequest\x12\x16\n" +
	"\x06region\x18\x01 \x01(\tR\x06region\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\"P\n" +
	"\x16GetActiveTripsResponse\x12 \n" +
	"\x05trips\x18\x01 \x03(\v2\n" +
	".trip.TripR\x05trips\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x05R\x05count\"\xff\x02\n" +
	"\x0fTripUpdateEvent\x12\x17\n" +
	"\atrip_id\x18\x01 \x01(\tR\x06tripId\x12/\n" +
	"\n" +
	"old_status\x18\x02 \x01(\x0e2\x10.trip.TripStatusR\toldStatus\x12/\n" +
	"\n" +
	"new_status\x18\x03 \x01(\x0e2\x10.trip.TripStatusR\tnewStatus\x129\n" +
	"\x10current_location\x18\x04 \x01(\v2\x0e.trip.LocationR\x0fcurrentLocation\x128\n" +
	"\ttimestamp\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12?\n" +
	"\bmetadata\x18\x06 \x03(\v2#.trip.TripUpdateEvent.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"Q\n" +
	"\x1dSubscribeToTripUpdatesRequest\x12\x17\n" +
	"\atrip_id\x18\x01 \x01(\tR\x06tripId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId*\xd4\x01\n" +
	"\n" +
	"TripStatus\x12\x12\n" +
	"\x0eUNKNOWN_STATUS\x10\x00\x12\r\n" +
	"\tREQUESTED\x10\x01\x12\v\n" +
	"\aMATCHED\x10\x02\x12\x13\n" +
	"\x0fDRIVER_EN_ROUTE\x10\x03\x12\x12\n" +
	"\x0eDRIVER_ARRIVED\x10\x04\x12\x10\n" +
	"\fTRIP_STARTED\x10\x05\x12\x0f\n" +
	"\vIN_PROGRESS\x10\x06\x12\r\n" +
	"\tCOMPLETED\x10\a\x12\x16\n" +
	"\x12CANCELLED_BY_RIDER\x10\b\x12\x17\n" +
	"\x13CANCELLED_BY_DRIVER\x10\t\x12\n" +
	"\n" +
	"\x06FAILED\x10\n" +
	"2\xc5\x03\n" +
	"\vTripService\x12?\n" +
	"\n" +
	"CreateTrip\x12\x17.trip.CreateTripRequest\x1a\x18.trip.CreateTripResponse\x126\n" +
	"\aGetTrip\x12\x14.trip.GetTripRequest\x1a\x15.trip.GetTripResponse\x12Q\n" +
	"\x10UpdateTripStatus\x12\x1d.trip.UpdateTripStatusRequest\x1a\x1e.trip.UpdateTripStatusResponse\x12E\n" +
	"\fGetUserTrips\x12\x19.trip.GetUserTripsRequest\x1a\x1a.trip.GetUserTripsResponse\x12K\n" +
	"\x0eGetActiveTrips\x12\x1b.trip.GetActiveTripsRequest\x1a\x1c.trip.GetActiveTripsResponse\x12V\n" +
	"\x16SubscribeToTripUpdates\x12#.trip.SubscribeToTripUpdatesRequest\x1a\x15.trip.TripUpdateEvent0\x01B1Z/github.com/rideshare-platform/shared/proto/tripb\x06proto3"

var (
	file_trip_proto_rawDescOnce sync.Once
	file_trip_proto_rawDescData []byte
)

func file_trip_proto_rawDescGZIP() []byte {
	file_trip_proto_rawDescOnce.Do(func() {
		file_trip_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_trip_proto_rawDesc), len(file_trip_proto_rawDesc)))
	})
	return file_trip_proto_rawDescData
}

var file_trip_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_trip_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_trip_proto_goTypes = []any{
	(TripStatus)(0),                       // 0: trip.TripStatus
	(*Location)(nil),                      // 1: trip.Location
	(*Trip)(nil),                          // 2: trip.Trip
	(*TripMetadata)(nil),                  // 3: trip.TripMetadata
	(*CreateTripRequest)(nil),             // 4: trip.CreateTripRequest
	(*CreateTripResponse)(nil),            // 5: trip.CreateTripResponse
	(*GetTripRequest)(nil),                // 6: trip.GetTripRequest
	(*GetTripResponse)(nil),               // 7: trip.GetTripResponse
	(*UpdateTripStatusRequest)(nil),       // 8: trip.UpdateTripStatusRequest
	(*UpdateTripStatusResponse)(nil),      // 9: trip.UpdateTripStatusResponse
	(*GetUserTripsRequest)(nil),           // 10: trip.GetUserTripsRequest
	(*GetUserTripsResponse)(nil),          // 11: trip.GetUserTripsResponse
	(*GetActiveTripsRequest)(nil),         // 12: trip.GetActiveTripsRequest
	(*GetActiveTripsResponse)(nil),        // 13: trip.GetActiveTripsResponse
	(*TripUpdateEvent)(nil),               // 14: trip.TripUpdateEvent
	(*SubscribeToTripUpdatesRequest)(nil), // 15: trip.SubscribeToTripUpdatesRequest
	nil,                                   // 16: trip.TripUpdateEvent.MetadataEntry
	(*timestamppb.Timestamp)(nil),         // 17: google.protobuf.Timestamp
}
var file_trip_proto_depIdxs = []int32{
	0,  // 0: trip.Trip.status:type_name -> trip.TripStatus
	1,  // 1: trip.Trip.pickup_location:type_name -> trip.Location
	1,  // 2: trip.Trip.destination:type_name -> trip.Location
	17, // 3: trip.Trip.requested_at:type_name -> google.protobuf.Timestamp
	17, // 4: trip.Trip.accepted_at:type_name -> google.protobuf.Timestamp
	17, // 5: trip.Trip.started_at:type_name -> google.protobuf.Timestamp
	17, // 6: trip.Trip.completed_at:type_name -> google.protobuf.Timestamp
	3,  // 7: trip.Trip.metadata:type_name -> trip.TripMetadata
	1,  // 8: trip.CreateTripRequest.pickup_location:type_name -> trip.Location
	1,  // 9: trip.CreateTripRequest.destination:type_name -> trip.Location
	3,  // 10: trip.CreateTripRequest.metadata:type_name -> trip.TripMetadata
	2,  // 11: trip.CreateTripResponse.trip:type_name -> trip.Trip
	2,  // 12: trip.GetTripResponse.trip:type_name -> trip.Trip
	0,  // 13: trip.UpdateTripStatusRequest.status:type_name -> trip.TripStatus
	2,  // 14: trip.UpdateTripStatusResponse.trip:type_name -> trip.Trip
	0,  // 15: trip.GetUserTripsRequest.status:type_name -> trip.TripStatus
	2,  // 16: trip.GetUserTripsResponse.trips:type_name -> trip.Trip
	2,  // 17: trip.GetActiveTripsResponse.trips:type_name -> trip.Trip
	0,  // 18: trip.TripUpdateEvent.old_status:type_name -> trip.TripStatus
	0,  // 19: trip.TripUpdateEvent.new_status:type_name -> trip.TripStatus
	1,  // 20: trip.TripUpdateEvent.current_location:type_name -> trip.Location
	17, // 21: trip.TripUpdateEvent.timestamp:type_name -> google.protobuf.Timestamp
	16, // 22: trip.TripUpdateEvent.metadata:type_name -> trip.TripUpdateEvent.MetadataEntry
	4,  // 23: trip.TripService.CreateTrip:input_type -> trip.CreateTripRequest
	6,  // 24: trip.TripService.GetTrip:input_type -> trip.GetTripRequest
	8,  // 25: trip.TripService.UpdateTripStatus:input_type -> trip.UpdateTripStatusRequest
	10, // 26: trip.TripService.GetUserTrips:input_type -> trip.GetUserTripsRequest
	12, // 27: trip.TripService.GetActiveTrips:input_type -> trip.GetActiveTripsRequest
	15, // 28: trip.TripService.SubscribeToTripUpdates:input_type -> trip.SubscribeToTripUpdatesRequest
	5,  // 29: trip.TripService.CreateTrip:output_type -> trip.CreateTripResponse
	7,  // 30: trip.TripService.GetTrip:output_type -> trip.GetTripResponse
	9,  // 31: trip.TripService.UpdateTripStatus:output_type -> trip.UpdateTripStatusResponse
	11, // 32: trip.TripService.GetUserTrips:output_type -> trip.GetUserTripsResponse
	13, // 33: trip.TripService.GetActiveTrips:output_type -> trip.GetActiveTripsResponse
	14, // 34: trip.TripService.SubscribeToTripUpdates:output_type -> trip.TripUpdateEvent
	29, // [29:35] is the sub-list for method output_type
	23, // [23:29] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_trip_proto_init() }
func file_trip_proto_init() {
	if File_trip_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_trip_proto_rawDesc), len(file_trip_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_trip_proto_goTypes,
		DependencyIndexes: file_trip_proto_depIdxs,
		EnumInfos:         file_trip_proto_enumTypes,
		MessageInfos:      file_trip_proto_msgTypes,
	}.Build()
	File_trip_proto = out.File
	file_trip_proto_goTypes = nil
	file_trip_proto_depIdxs = nil
}
