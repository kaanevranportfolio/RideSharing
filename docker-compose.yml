version: '3.8'

services:
  # PostgreSQL for User and Vehicle services
  postgres:
    image: postgres:15-alpine
    container_name: rideshare-postgres
    environment:
      POSTGRES_DB: rideshare
      POSTGRES_USER: rideshare_user
      POSTGRES_PASSWORD: rideshare_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-postgres.sql:/docker-entrypoint-initdb.d/init-postgres.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rideshare_user -d rideshare"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MongoDB for Geospatial service
  mongodb:
    image: mongo:7.0
    container_name: rideshare-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: rideshare_user
      MONGO_INITDB_ROOT_PASSWORD: rideshare_password
      MONGO_INITDB_DATABASE: rideshare_geo
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongodb.js:/docker-entrypoint-initdb.d/init-mongodb.js
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand('ping').ok"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching
  redis:
    image: redis:7.2-alpine
    container_name: rideshare-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # User Service
  user-service:
    build:
      context: ./services/user-service
      dockerfile: Dockerfile
    container_name: rideshare-user-service
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=info
      - GRPC_PORT=50051
      - HTTP_PORT=8051
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=rideshare
      - DB_USERNAME=rideshare_user
      - DB_PASSWORD=rideshare_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "50051:50051"
      - "8051:8051"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "grpc-health-probe", "-addr=:50051"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Vehicle Service
  vehicle-service:
    build:
      context: ./services/vehicle-service
      dockerfile: Dockerfile
    container_name: rideshare-vehicle-service
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=info
      - GRPC_PORT=50052
      - HTTP_PORT=8052
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=rideshare
      - DB_USERNAME=rideshare_user
      - DB_PASSWORD=rideshare_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "50052:50052"
      - "8052:8052"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "grpc-health-probe", "-addr=:50052"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Geo Service
  geo-service:
    build:
      context: ./services/geo-service
      dockerfile: Dockerfile
    container_name: rideshare-geo-service
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=info
      - GRPC_PORT=50053
      - HTTP_PORT=8053
      - DB_HOST=mongodb
      - DB_PORT=27017
      - DB_NAME=rideshare_geo
      - DB_USERNAME=rideshare_user
      - DB_PASSWORD=rideshare_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "50053:50053"
      - "8053:8053"
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "grpc-health-probe", "-addr=:50053"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  mongodb_data:
  redis_data:

networks:
  default:
    name: rideshare-network
